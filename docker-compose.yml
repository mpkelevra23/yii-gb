#version: '3'
#
#services:
#
#  app:
#    build: ./docker/app
#    container_name: ${PROJECT_NAME}_app
#    restart: unless-stopped
#    working_dir: /var/www/${PROJECT_NAME}/site
#    volumes:
##      - /etc/localtime:/etc/localtime
##      - ./docker/php-fpm/php.ini:/etc/php/8.0/fpm/conf.d/99-overrides.ini
##      - ./docker/php-fpm/php-fpm.conf:/etc/php/8.0/fpm/pool.d/z-overrides.conf
##      - ./docker/php-fpm/log:/var/log/php-fpm
#      - .:/var/www/${PROJECT_NAME}/site
#    networks:
#      - common
#
#  nginx:
#    image: nginx:alpine
#    container_name: ${PROJECT_NAME}_nginx
#    volumes:
#      - ./:/var/www/${PROJECT_NAME}/site
#      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
#      - ./docker/nginx/log:/var/log/nginx
#    networks:
#      - common
#    ports:
#      - ${PROJECT_PORT}:80
#
#  mysql:
#    image: mysql:8
#    container_name: ${PROJECT_NAME}_mysql
#    restart: unless-stopped
#    environment:
#      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
#      MYSQL_DATABASE: ${PROJECT_NAME}
#    volumes:
#      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/99-overrides.cnf
#      - ./docker/mysql/db:/var/lib/mysql
#      - ./docker/mysql/bak/:/bak
#      - ./dumps/${DUMP_FILE}:/docker-entrypoint-initdb.d/dump.sql
##    entrypoint: [ "bash", "-c", "mysqld --initialize --user=mysql --basedir=/usr --datadir=/var/lib/mysql" ]
#    ports:
#      - ${MYSQL_PORT}:3306
#    networks:
#      - common
#
#networks:
#  common:
#    external: true

version: '3'

# Networks
networks:
  yii2-gb-network:
    driver: bridge

# Services
services:
  # nginx service
  nginx:
    image: nginx:1.23.3
    container_name: ${PROJECT_NAME}_nginx
    ports:
      - ${PROJECT_PORT}:80
    restart: unless-stopped
    tty: true
    volumes:
      - .:/var/www/${PROJECT_NAME}:rw
      #      - ./.docker/nginx/conf.d/nginx.conf:/etc/nginx/nginx.conf:rw
      #      - ./.docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:rw
      - ./.docker/nginx/${PROJECT_NAME}.conf:/etc/nginx/conf.d/${PROJECT_NAME}.conf:rw
      - ./.docker/nginx/log:/var/log/nginx
    depends_on:
      - app
    networks:
      - ${PROJECT_NAME}-network
  # app service
  # При первой настройке обновляем composer.
  # 1. docker container exec -it php-fpm /bin/bash
  # 2. composer self-update && composer update && composer cc && composer validate
  app:
    build: .docker/app/
    container_name: ${PROJECT_NAME}_app
    working_dir: /var/www/${PROJECT_NAME}
    restart: unless-stopped
    tty: true
    volumes:
      - .:/var/www/${PROJECT_NAME}
    depends_on:
      - db
    networks:
      - ${PROJECT_NAME}-network
  # db service
  db:
    image: mysql:8
    container_name: ${PROJECT_NAME}_db
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${PROJECT_NAME}
    ports:
      - ${MYSQL_PORT}:3306
    volumes:
#      - ./.docker/mysql/my.cnf:/etc/mysql/conf.d/99-overrides.cnf
      - ./.docker/mysql/db:/var/lib/mysql
      - ./.docker/mysql/bak/:/bak
#      - ./.docker/mysql/dumps/${DUMP_FILE}:/docker-entrypoint-initdb.d/dump.sql
    networks:
      - ${PROJECT_NAME}-network